spring:
  application:
    name: vaultx-banking-system
  
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 600000
      leak-detection-threshold: 60000
      auto-commit: true
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
        connection:
          provider_disables_autocommit: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  security:
    user:
      name: ${ADMIN_USERNAME}
      password: ${ADMIN_PASSWORD}

server:
  port: ${PORT:8080}
  tomcat:
    threads:
      max: 500
      min-spare: 20
    accept-count: 200
    max-connections: 16384

logging:
  level:
    com.bankmanagement: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.scheduling: INFO
    org.springframework.scheduling.concurrent: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Async configuration for production
spring:
  task:
    execution:
      pool:
        core-size: 10
        max-size: 50
        queue-capacity: 200
        keep-alive: 120s
      thread-name-prefix: "VaultX-Async-"
    scheduling:
      pool:
        size: 5
      thread-name-prefix: "VaultX-Scheduler-"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000 # 24 hours in milliseconds

# CORS Configuration for Production
cors:
  allowed-origins: ${FRONTEND_URL:http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
